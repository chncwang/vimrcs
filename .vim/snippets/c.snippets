# main()
snippet main
	int main(int argc, const char *argv[])
	{
		${1}
		return 0;
	}
# #include <...>
snippet incs
	#include <${1:stdio.h}>
# #include "..."
snippet incf
	#include "${1:`Filename("$1.h")`}"
# #ifndef ... #define ... #endif
snippet defh
	#ifndef $1
	#define ${1:SYMBOL}
	
	${2:text}
	
	#endif
snippet def
	#define 
snippet ifdef
	#ifdef ${1:FOO}
	${2:#define }
	#endif
snippet #if
	#if ${1:FOO}
		${2}
	#endif
# Header Include-Guard
# (the randomizer code is taken directly from TextMate; it could probably be
# cleaner, I don't know how to do it in vim script)
snippet once
	#ifndef ${1:`toupper(Filename('', 'UNTITLED').'_'.system("/usr/bin/ruby -e 'print (rand * 2821109907455).round.to_s(36)'"))`}
	#define $1
	
	${2}
	
	#endif
# If Condition
snippet sif
	if (${1:/* condition */}) {
	    ${2:/* code */}
	}
snippet sel
	else {
	    ${1}
	}
# Tertiary conditional
snippet stwo
	${1:/* condition */} ? ${2:a} : ${3:b}
# Do While Loop
snippet sdw
	do {
	    ${2:/* code */}
	} while (${1:/* condition */});
# While Loop
snippet sw
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# For Loop
snippet sfr
	for (${1:init}; ${2:condition}; ${3:change}) {
	    ${4:/* code */}
	}
# Function
snippet fun
	${1:void} ${2:function_name}(${3:args})
	{
	    ${4:/* code */}
	}
# Function Declaration
snippet fund
	${1:void} ${2:function_name}(${3});
# Typedef
snippet td
	typedef ${1:int} ${2:MyCustomType};
# Struct
snippet st
	struct ${1:`Filename('$1_t', 'name')`} {
	    ${2:/* data */}
	} ${3};
# Typedef struct
snippet tds
	typedef struct ${2}{
	    ${3:/* data */}
	} ${1:`Filename('$1_t', 'name')`};
# Typdef enum
snippet tde
	typedef enum {
	    ${1:/* data */}
	} ${2:foo};
# printf
# unfortunately version this isn't as nice as TextMates's, given the lack of a
# dynamic `...`
snippet fmt
	${1:func_name}("${2:text}"${3:, }${4});
snippet un
	unsigned
# lua
snippet inclua
	#include "lua.h"
	#include "lualib.h"
	#include "lauxlib.h"
snippet lc
	/* ${1:content} */${2}
snippet blc
	/* *****************************************************************************
	 * description : ${1:description}
	 * ****************************************************************************/
